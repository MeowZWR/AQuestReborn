on:
  workflow_dispatch:
    inputs: {}
  push:
    tags:
      - '*-cn'
      - '!testing_*'

name: Release

jobs:
  release:
    name: Release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x.x'

      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: |
          $ver = '${{ github.ref }}' -replace 'refs/tags/','' -replace '-cn$', ''
          dotnet build --no-restore -c Release --nologo -p:Version=$ver

      - name: Write version into manifest
        run: |
          $ver = '${{ github.ref }}' -replace 'refs/tags/','' -replace '-cn$', ''
          $path = './AQuestReborn/bin/x64/Release/AQuestReborn.json'
          $content = get-content -path $path
          $content = $content -replace '0.0.0.0',$ver
          set-content -Path $path -Value $content

      - name: Packing Release
        run: |
          pushd AQuestReborn/bin/x64/Release/
          7z a ../AQuestReborn.zip *
          popd
        shell: bash

      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          name: AQuestReborn ${{ github.ref_name }}
          artifacts: "./AQuestReborn/bin/x64/*.zip"
          tag: ${{ github.ref_name }}
          body: "A build of the A Quest Reborn plugin. Do not install this manually. Install via the dalamud repo link!"
          omitBodyDuringUpdate: true
          allowUpdates: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Write out repo.json
        run: |
          $ver = '${{ github.ref_name }}'
          $verBase = $ver -replace '-cn$', ''
          $path = './repo.json'
          $json = Get-Content -Raw $path | ConvertFrom-Json
          $json[0].AssemblyVersion = $verBase
          $json[0].TestingAssemblyVersion = $verBase
          $json[0].DownloadLinkInstall = $json.DownloadLinkInstall -replace '[^/]+/AQuestReborn.zip',"$ver/AQuestReborn.zip"
          $json[0].DownloadLinkTesting = $json.DownloadLinkTesting -replace '[^/]+/AQuestReborn.zip',"$ver/AQuestReborn.zip"
          $json[0].DownloadLinkUpdate = $json.DownloadLinkUpdate -replace '[^/]+/AQuestReborn.zip',"$ver/AQuestReborn.zip"
          $content = $json | ConvertTo-Json -AsArray
          set-content -Path $path -Value $content

      - name: Commit repo.json
        run: |
          git config --global user.name "Actions User"
          git config --global user.email "actions@github.com"
          git fetch origin cn
          git branch -f cn ${{ github.sha }}
          git checkout cn
          git add repo.json
          git commit -m "[CI] Updating repo.json for ${{ github.ref_name }}" || true
          git push origin cn

  trigger_workflow:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Workflow in DalamudPlugin Repository
        run: |
          repo_owner="MeowZWR"
          repo_name="DalamudPlugin"
          event_type="request-update-run-action"
          
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.MEOWRSTRIGGER }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
            -d "{\"event_type\": \"$event_type\", \"client_payload\": {\"unit\": false, \"integration\": true}}"
